version: "3"

services:
  database:
    image: postgres:alpine
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=${DATABASE_USER}
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD}
      - POSTGRES_DB=${DATABASE_NAME}
    volumes:
      - database-vol:/var/lib/mysql
    networks:
      - back-office
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${DATABASE_USER}"]
      interval: 3s
      retries: 24
      start_period: 12s

  backend:
    image: ghcr.io/thanawat-toktik/toktik-backend:latest
    build: https://github.com/thanawat-toktik/toktik-backend.git#presigned-watch
    environment:
      - SECRET_KEY=${SECRET_KEY}
      - DATABASE_HOST=database
      - DATABASE_PORT=5432
      - DATABASE_USER=${DATABASE_USER}
      - DATABASE_PASSWORD=${DATABASE_PASSWORD}
      - DATABASE_NAME=${DATABASE_NAME}
      - S3_ACCESS_KEY=${S3_ACCESS_KEY}
      - S3_SECRET_ACCESS_KEY=${S3_SECRET_ACCESS_KEY}
      - S3_BUCKET_NAME_RAW=${S3_BUCKET_NAME_RAW}
      - S3_RAW_ENDPOINT=${S3_RAW_ENDPOINT}
      - S3_REGION=${S3_REGION}
      - REDIS_HOSTNAME=queue
      - REDIS_PORT=6379
    depends_on:
      database:
        condition: service_healthy
      queue:
        condition: service_healthy
    networks:
      - back-office
      - user-facing

  frontend:
    image: ghcr.io/thanawat-toktik/toktik-frontend:latest
    build: https://github.com/thanawat-toktik/toktik-frontend.git#presigned-watch:toktik-frontend
    depends_on:
      - backend
    networks:
      - user-facing

  proxy:
    image: nginx:stable-alpine-slim
    ports:
      - "7887:80"
    volumes:
      - ./proxy/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - frontend
    networks:
      - user-facing

  queue:
    image: redis:alpine
    networks:
      - back-office
      - back-worker
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 3s
      retries: 24
      start_period: 12s

  vid-converter:
    image: ghcr.io/thanawat-toktik/toktik-vid-convert:latest
    networks:
      - back-worker
    environment:
      - S3_ACCESS_KEY=${S3_ACCESS_KEY}
      - S3_SECRET_ACCESS_KEY=${S3_SECRET_ACCESS_KEY}
      - S3_BUCKET_NAME_RAW=${S3_BUCKET_NAME_RAW}
      - S3_BUCKET_NAME_CONVERTED=${S3_BUCKET_NAME_CONVERTED}
      - S3_RAW_ENDPOINT=${S3_RAW_ENDPOINT}
      - S3_REGION=${S3_REGION}
      - REDIS_HOSTNAME=queue
      - REDIS_PORT=6379
    depends_on:
      queue:
        condition: service_healthy

  vid-chunker:
    image: ghcr.io/thanawat-toktik/toktik-vid-chonker:latest
    networks:
      - back-worker
    environment:
      - S3_ACCESS_KEY=${S3_ACCESS_KEY}
      - S3_SECRET_ACCESS_KEY=${S3_SECRET_ACCESS_KEY}
      - S3_BUCKET_NAME_CONVERTED=${S3_BUCKET_NAME_CONVERTED}
      - S3_BUCKET_NAME_CHUNKED=${S3_BUCKET_NAME_CHUNKED}
      - S3_RAW_ENDPOINT=${S3_RAW_ENDPOINT}
      - S3_REGION=${S3_REGION}
      - REDIS_HOSTNAME=queue
      - REDIS_PORT=6379
    depends_on:
      queue:
        condition: service_healthy

  thumbnailer:
    image: ghcr.io/thanawat-toktik/toktik-thumbnail:latest
    networks:
      - back-worker
    environment:
      - S3_ACCESS_KEY=${S3_ACCESS_KEY}
      - S3_SECRET_ACCESS_KEY=${S3_SECRET_ACCESS_KEY}
      - S3_BUCKET_NAME_CONVERTED=${S3_BUCKET_NAME_CONVERTED}
      - S3_BUCKET_NAME_THUMBNAIL=${S3_BUCKET_NAME_THUMBNAIL}
      - S3_RAW_ENDPOINT=${S3_RAW_ENDPOINT}
      - S3_REGION=${S3_REGION}
      - REDIS_HOSTNAME=queue
      - REDIS_PORT=6379
    depends_on:
      queue:
        condition: service_healthy

  queue-check-scheduler:
    image: ghcr.io/thanawat-toktik/toktik-scheduler:latest
    build: https://github.com/thanawat-toktik/toktik-scheduler.git
    networks:
      - back-office
    environment:
      - BACKEND_HOST=backend
      - BACKEND_PORT=8000
    depends_on:
      - backend

  notification:
    image: ghcr.io/thanawat-toktik/toktik-notifications:latest
    networks:
      - back-worker
      - user-facing
    environment:
      - REDIS_HOSTNAME=queue
      - REDIS_PORT=6379

networks:
  user-facing:
  back-office:
  back-worker:

volumes:
  database-vol:
    driver: local
