version: "3"

services:
  database:
    image: postgres:alpine
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=${DATABASE_USER}
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD}
      - POSTGRES_DB=${DATABASE_NAME}
    volumes:
      - database-vol:/var/lib/mysql
    networks:
      - back-office
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${DATABASE_USER}"]
      interval: 3s
      retries: 24
      start_period: 12s
  backend:
    build: ../toktik-backend/
    environment:
      - DATABASE_HOST=database
      - DATABASE_PORT=${DATABASE_PORT}
      - DATABASE_USER=${DATABASE_USER}
      - DATABASE_PASSWORD=${DATABASE_PASSWORD}
      - DATABASE_NAME=${DATABASE_NAME}
      - S3_ACCESS_KEY=${S3_ACCESS_KEY}
      - S3_SECRET_ACCESS_KEY=${S3_SECRET_ACCESS_KEY}
      - S3_BUCKET_NAME=${S3_BUCKET_NAME}
      - S3_RAW_ENDPOINT=${S3_RAW_ENDPOINT}
      - S3_REGION=${S3_REGION}
    depends_on:
      database:
        condition: service_healthy
    networks:
      - back-office
      - user-facing
  frontend:
    build: ../toktik-frontend/toktik-frontend/
    depends_on:
      - backend
    networks:
      - user-facing
  proxy:
    image: nginx:stable-alpine-slim
    ports:
      - "8080:80"
    volumes:
      - ./proxy/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - frontend
    networks:
      - user-facing

networks:
  user-facing:
  back-office:

volumes:
  database-vol:
    driver: local
